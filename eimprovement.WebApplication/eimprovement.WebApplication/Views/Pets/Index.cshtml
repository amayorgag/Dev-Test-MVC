@using PagedList.Mvc
@model eimprovement.WebApplication.Models.PetIndexViewModel


@{
    ViewBag.Title = "Pets Home Page";
}

@section Scripts {
    @Scripts.Render("~/bundles/bootstrap-confirmation")

    <script type="text/javascript">
        const antiforgeryToken = $("#__AjaxAntiForgeryForm input").val();

        $('.jsDeleteLink').confirmation({
            copyAttributes: '',
            onConfirm: function () {
                const $link = $(this);
                const url = $link.attr("href");
                const dataObject = {
                    __RequestVerificationToken: antiforgeryToken
                };

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: dataObject,
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("ERROR! status: " + textStatus + "error thrown: " + errorThrown);
                    },
                    success: function () {
                        location.reload();
                    }
                });
            }
        });
    </script>
}

<div class="jumbotron">
    <h1>PetStore Online</h1>
    <p class="lead">Welcome to the pet viewer and editor application</p>
</div>

<h2>Pet List</h2>
<p>
    @Html.ActionLink("Add new pet", "Add", null, new { @class = "btn btn-primary" })
</p>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}


@using (Html.BeginForm("Index", "Pets", FormMethod.Get))
{
    <div class="form-group">
        <label>Filter by name</label>
        @Html.TextBox("NameFilter", Model.NameFilter, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <input type="submit" value="Filter" class="btn btn-primary" />
    </div>
}

<div class="row">
    <div class="col-md-12">
        <table class="table">
            <tr>
                <th>
                    Pet name
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.PagedPets)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "jsDeleteLink" })
                        @Html.ActionLink("Update", "Update", new { id = item.Id })
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(Model.PagedPets, page => Url.Action("Index", new { page, currentNameFilter = Model.NameFilter }))
        <p>Page @(Model.PagedPets.PageCount < Model.PagedPets.PageNumber ? 0 : Model.PagedPets.PageNumber) of @Model.PagedPets.PageCount</p>
    </div>
</div>